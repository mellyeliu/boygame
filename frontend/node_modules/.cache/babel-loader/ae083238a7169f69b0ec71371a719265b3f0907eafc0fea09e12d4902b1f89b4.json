{"ast":null,"code":"var _jsxFileName = \"/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport TraitCard from \"./Trait\"; // Import the existing TraitCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\nconst TraitStack = ({\n  traits\n}) => {\n  _s();\n  const stackRef = useRef(null); // Ref for the container\n  const [cardHeight, setCardHeight] = useState(0); // State to store the actual card height\n\n  useEffect(() => {\n    if (stackRef.current) {\n      const firstCard = stackRef.current.querySelector(\".trait-card\"); // Assuming TraitCard has a className\n      if (firstCard) {\n        setCardHeight(firstCard.getBoundingClientRect().height); // Get the actual card height\n      }\n    }\n  }, []);\n  const styles = {\n    traitStack: {\n      position: \"relative\",\n      marginTop: \"-5vh\",\n      width: \"100%\",\n      height: \"100%\" // Dynamic height for the stack\n    },\n    cardPosition: index => ({\n      position: \"absolute\",\n      top: `${index * 7}vh`,\n      // Calculate top based on measured card height\n      left: `calc(10% - ${getRandomNumber(-5, 5)}vw)`,\n      // Randomized horizontal offset\n      transform: `rotate(${getRandomNumber(-5, 5)}deg)`,\n      // Randomized rotation\n      maxWidth: \"30vh\",\n      height: \"4vh\"\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: stackRef,\n    style: styles.traitStack,\n    children: traits.map((trait, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.cardPosition(index),\n      className: \"trait-card\",\n      children: /*#__PURE__*/_jsxDEV(TraitCard, {\n        text: trait.text,\n        type: trait.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TraitStack, \"9Oe5YO0Bon7v6axfck+dyts3oHQ=\");\n_c = TraitStack;\nexport default TraitStack;\nvar _c;\n$RefreshReg$(_c, \"TraitStack\");","map":{"version":3,"names":["React","useRef","useState","useEffect","TraitCard","jsxDEV","_jsxDEV","getRandomNumber","min","max","Math","random","TraitStack","traits","_s","stackRef","cardHeight","setCardHeight","current","firstCard","querySelector","getBoundingClientRect","height","styles","traitStack","position","marginTop","width","cardPosition","index","top","left","transform","maxWidth","ref","style","children","map","trait","className","text","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport TraitCard from \"./Trait\"; // Import the existing TraitCard component\n\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\n\nconst TraitStack = ({ traits }) => {\n  const stackRef = useRef(null); // Ref for the container\n  const [cardHeight, setCardHeight] = useState(0); // State to store the actual card height\n\n  useEffect(() => {\n    if (stackRef.current) {\n      const firstCard = stackRef.current.querySelector(\".trait-card\"); // Assuming TraitCard has a className\n      if (firstCard) {\n        setCardHeight(firstCard.getBoundingClientRect().height); // Get the actual card height\n      }\n    }\n  }, []);\n\n  const styles = {\n    traitStack: {\n      position: \"relative\",\n      marginTop: \"-5vh\",\n      width: \"100%\",\n      height: \"100%\", // Dynamic height for the stack\n    },\n    cardPosition: (index) => ({\n      position: \"absolute\",\n      top: `${index * 7}vh`, // Calculate top based on measured card height\n      left: `calc(10% - ${getRandomNumber(-5, 5)}vw)`, // Randomized horizontal offset\n      transform: `rotate(${getRandomNumber(-5, 5)}deg)`, // Randomized rotation\n      maxWidth: \"30vh\",\n      height: \"4vh\",\n    }),\n  };\n\n  return (\n    <div ref={stackRef} style={styles.traitStack}>\n      {traits.map((trait, index) => (\n        <div\n          key={index}\n          style={styles.cardPosition(index)}\n          className=\"trait-card\"\n        >\n          <TraitCard text={trait.text} type={trait.type} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TraitStack;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAEvE,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACG,OAAO,EAAE;MACpB,MAAMC,SAAS,GAAGJ,QAAQ,CAACG,OAAO,CAACE,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;MACjE,IAAID,SAAS,EAAE;QACbF,aAAa,CAACE,SAAS,CAACE,qBAAqB,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;MAC3D;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAG;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,MAAM;MACbL,MAAM,EAAE,MAAM,CAAE;IAClB,CAAC;IACDM,YAAY,EAAGC,KAAK,KAAM;MACxBJ,QAAQ,EAAE,UAAU;MACpBK,GAAG,EAAE,GAAGD,KAAK,GAAG,CAAC,IAAI;MAAE;MACvBE,IAAI,EAAE,cAAcxB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;MAAE;MACjDyB,SAAS,EAAE,UAAUzB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM;MAAE;MACnD0B,QAAQ,EAAE,MAAM;MAChBX,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EAED,oBACEhB,OAAA;IAAK4B,GAAG,EAAEnB,QAAS;IAACoB,KAAK,EAAEZ,MAAM,CAACC,UAAW;IAAAY,QAAA,EAC1CvB,MAAM,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAET,KAAK,kBACvBvB,OAAA;MAEE6B,KAAK,EAAEZ,MAAM,CAACK,YAAY,CAACC,KAAK,CAAE;MAClCU,SAAS,EAAC,YAAY;MAAAH,QAAA,eAEtB9B,OAAA,CAACF,SAAS;QAACoC,IAAI,EAAEF,KAAK,CAACE,IAAK;QAACC,IAAI,EAAEH,KAAK,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAJ5ChB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA3CIF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}