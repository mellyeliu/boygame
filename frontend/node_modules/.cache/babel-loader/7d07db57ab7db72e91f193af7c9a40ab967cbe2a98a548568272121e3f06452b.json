{"ast":null,"code":"var _jsxFileName = \"/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport TraitCard from \"./Trait\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\nconst TraitStack = ({\n  traits\n}) => {\n  _s();\n  const stackRef = useRef(null); // Ref for the container\n  const cardHeightRef = useRef(0); // Ref to store card height\n  const [ready, setReady] = useState(false); // Flag to indicate when the height is measured\n\n  useEffect(() => {\n    if (stackRef.current && !ready) {\n      // Measure the first card's height only once\n      const firstCard = stackRef.current.querySelector(\".trait-card\");\n      if (firstCard) {\n        cardHeightRef.current = firstCard.offsetHeight; // Store height in ref\n        setReady(true); // Mark as ready to render\n      }\n    }\n  }, [ready]);\n  const styles = {\n    traitStack: {\n      position: \"relative\",\n      width: \"100%\",\n      height: `${cardHeightRef.current * traits.length || 0}px` // Dynamic height based on measured card height\n    },\n    cardPosition: index => ({\n      position: \"absolute\",\n      top: `${index * (cardHeightRef.current - 20)}px`,\n      // Dynamic top offset\n      left: `${getRandomNumber(-50, 50)}px`,\n      // Randomized horizontal offset\n      transform: `rotate(${getRandomNumber(-5, 5)}deg)`,\n      // Randomized rotation\n      width: \"100%\"\n    })\n  };\n  if (!ready) return null; // Render nothing until height is measured\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: stackRef,\n    style: styles.traitStack,\n    children: traits.map((trait, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.cardPosition(index),\n      className: \"trait-card\",\n      children: /*#__PURE__*/_jsxDEV(TraitCard, {\n        text: trait.text,\n        type: trait.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TraitStack, \"N9/QYLwTB2HaDeQ3YKFxIX6LTao=\");\n_c = TraitStack;\nexport default TraitStack;\nvar _c;\n$RefreshReg$(_c, \"TraitStack\");","map":{"version":3,"names":["React","useRef","useEffect","useState","TraitCard","jsxDEV","_jsxDEV","getRandomNumber","min","max","Math","random","TraitStack","traits","_s","stackRef","cardHeightRef","ready","setReady","current","firstCard","querySelector","offsetHeight","styles","traitStack","position","width","height","length","cardPosition","index","top","left","transform","ref","style","children","map","trait","className","text","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport TraitCard from \"./Trait\";\n\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\n\nconst TraitStack = ({ traits }) => {\n  const stackRef = useRef(null); // Ref for the container\n  const cardHeightRef = useRef(0); // Ref to store card height\n  const [ready, setReady] = useState(false); // Flag to indicate when the height is measured\n\n  useEffect(() => {\n    if (stackRef.current && !ready) {\n      // Measure the first card's height only once\n      const firstCard = stackRef.current.querySelector(\".trait-card\");\n      if (firstCard) {\n        cardHeightRef.current = firstCard.offsetHeight; // Store height in ref\n        setReady(true); // Mark as ready to render\n      }\n    }\n  }, [ready]);\n\n  const styles = {\n    traitStack: {\n      position: \"relative\",\n      width: \"100%\",\n      height: `${cardHeightRef.current * traits.length || 0}px`, // Dynamic height based on measured card height\n    },\n    cardPosition: (index) => ({\n      position: \"absolute\",\n      top: `${index * (cardHeightRef.current - 20)}px`, // Dynamic top offset\n      left: `${getRandomNumber(-50, 50)}px`, // Randomized horizontal offset\n      transform: `rotate(${getRandomNumber(-5, 5)}deg)`, // Randomized rotation\n      width: \"100%\",\n    }),\n  };\n\n  if (!ready) return null; // Render nothing until height is measured\n\n  return (\n    <div ref={stackRef} style={styles.traitStack}>\n      {traits.map((trait, index) => (\n        <div\n          key={index}\n          style={styles.cardPosition(index)}\n          className=\"trait-card\"\n        >\n          <TraitCard text={trait.text} type={trait.type} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TraitStack;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAEvE,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,MAAMe,aAAa,GAAGf,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3CD,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ,CAACI,OAAO,IAAI,CAACF,KAAK,EAAE;MAC9B;MACA,MAAMG,SAAS,GAAGL,QAAQ,CAACI,OAAO,CAACE,aAAa,CAAC,aAAa,CAAC;MAC/D,IAAID,SAAS,EAAE;QACbJ,aAAa,CAACG,OAAO,GAAGC,SAAS,CAACE,YAAY,CAAC,CAAC;QAChDJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB;IACF;EACF,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,MAAMM,MAAM,GAAG;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,GAAGX,aAAa,CAACG,OAAO,GAAGN,MAAM,CAACe,MAAM,IAAI,CAAC,IAAI,CAAE;IAC7D,CAAC;IACDC,YAAY,EAAGC,KAAK,KAAM;MACxBL,QAAQ,EAAE,UAAU;MACpBM,GAAG,EAAE,GAAGD,KAAK,IAAId,aAAa,CAACG,OAAO,GAAG,EAAE,CAAC,IAAI;MAAE;MAClDa,IAAI,EAAE,GAAGzB,eAAe,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI;MAAE;MACvC0B,SAAS,EAAE,UAAU1B,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM;MAAE;MACnDmB,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAED,IAAI,CAACT,KAAK,EAAE,OAAO,IAAI,CAAC,CAAC;;EAEzB,oBACEX,OAAA;IAAK4B,GAAG,EAAEnB,QAAS;IAACoB,KAAK,EAAEZ,MAAM,CAACC,UAAW;IAAAY,QAAA,EAC1CvB,MAAM,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAER,KAAK,kBACvBxB,OAAA;MAEE6B,KAAK,EAAEZ,MAAM,CAACM,YAAY,CAACC,KAAK,CAAE;MAClCS,SAAS,EAAC,YAAY;MAAAH,QAAA,eAEtB9B,OAAA,CAACF,SAAS;QAACoC,IAAI,EAAEF,KAAK,CAACE,IAAK;QAACC,IAAI,EAAEH,KAAK,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAJ5Cf,KAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA9CIF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}