{"ast":null,"code":"var _jsxFileName = \"/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js\";\nimport React from \"react\";\nimport TraitCard from \"./Trait\"; // Import the existing TraitCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\nconst styles = {\n  traitStack: {\n    position: \"relative\",\n    width: \"300px\",\n    // Adjust to fit the cards\n    height: \"350px\" // Adjust to fit the staggered stack\n  },\n  cardPosition: index => {\n    const offsets = [{\n      top: \"0px\",\n      left: `${getRandomNumber(30, 50)}px`,\n      rotate: `${getRandomNumber(-5, 5)}deg`\n    }, {\n      top: \"80px\",\n      left: `${getRandomNumber(-50, -30)}px`,\n      rotate: `${getRandomNumber(-5, 6)}deg`\n    }, {\n      top: \"150px\",\n      left: `${getRandomNumber(30, 50)}px`,\n      rotate: `${getRandomNumber(-6, 3)}deg`\n    }, {\n      top: \"210px\",\n      left: `${getRandomNumber(-50, -30)}px`,\n      rotate: `${getRandomNumber(-3, 6)}deg`\n    }];\n    return {\n      position: \"absolute\",\n      top: offsets[index].top,\n      left: offsets[index].left,\n      transform: `rotate(${offsets[index].rotate})`\n    };\n  }\n};\nconst TraitStack = ({\n  traits\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.traitStack,\n  children: traits.map((trait, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.cardPosition(index),\n    children: /*#__PURE__*/_jsxDEV(TraitCard, {\n      text: trait.text,\n      type: trait.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this);\n_c = TraitStack;\nexport default TraitStack;\nvar _c;\n$RefreshReg$(_c, \"TraitStack\");","map":{"version":3,"names":["React","TraitCard","jsxDEV","_jsxDEV","getRandomNumber","min","max","Math","random","styles","traitStack","position","width","height","cardPosition","index","offsets","top","left","rotate","transform","TraitStack","traits","style","children","map","trait","text","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js"],"sourcesContent":["import React from \"react\";\nimport TraitCard from \"./Trait\"; // Import the existing TraitCard component\n\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\n\nconst styles = {\n  traitStack: {\n    position: \"relative\",\n    width: \"300px\", // Adjust to fit the cards\n    height: \"350px\", // Adjust to fit the staggered stack\n  },\n  cardPosition: (index) => {\n    const offsets = [\n      {\n        top: \"0px\",\n        left: `${getRandomNumber(30, 50)}px`,\n        rotate: `${getRandomNumber(-5, 5)}deg`,\n      },\n      {\n        top: \"80px\",\n        left: `${getRandomNumber(-50, -30)}px`,\n        rotate: `${getRandomNumber(-5, 6)}deg`,\n      },\n      {\n        top: \"150px\",\n        left: `${getRandomNumber(30, 50)}px`,\n        rotate: `${getRandomNumber(-6, 3)}deg`,\n      },\n      {\n        top: \"210px\",\n        left: `${getRandomNumber(-50, -30)}px`,\n        rotate: `${getRandomNumber(-3, 6)}deg`,\n      },\n    ];\n    return {\n      position: \"absolute\",\n      top: offsets[index].top,\n      left: offsets[index].left,\n      transform: `rotate(${offsets[index].rotate})`,\n    };\n  },\n};\n\nconst TraitStack = ({ traits }) => (\n  <div style={styles.traitStack}>\n    {traits.map((trait, index) => (\n      <div key={index} style={styles.cardPosition(index)}>\n        <TraitCard text={trait.text} type={trait.type} />\n      </div>\n    ))}\n  </div>\n);\n\nexport default TraitStack;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAEvE,MAAMI,MAAM,GAAG;EACbC,UAAU,EAAE;IACVC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,OAAO;IAAE;IAChBC,MAAM,EAAE,OAAO,CAAE;EACnB,CAAC;EACDC,YAAY,EAAGC,KAAK,IAAK;IACvB,MAAMC,OAAO,GAAG,CACd;MACEC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,GAAGd,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI;MACpCe,MAAM,EAAE,GAAGf,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC,EACD;MACEa,GAAG,EAAE,MAAM;MACXC,IAAI,EAAE,GAAGd,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI;MACtCe,MAAM,EAAE,GAAGf,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC,EACD;MACEa,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE,GAAGd,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI;MACpCe,MAAM,EAAE,GAAGf,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC,EACD;MACEa,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE,GAAGd,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI;MACtCe,MAAM,EAAE,GAAGf,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC,CACF;IACD,OAAO;MACLO,QAAQ,EAAE,UAAU;MACpBM,GAAG,EAAED,OAAO,CAACD,KAAK,CAAC,CAACE,GAAG;MACvBC,IAAI,EAAEF,OAAO,CAACD,KAAK,CAAC,CAACG,IAAI;MACzBE,SAAS,EAAE,UAAUJ,OAAO,CAACD,KAAK,CAAC,CAACI,MAAM;IAC5C,CAAC;EACH;AACF,CAAC;AAED,MAAME,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,kBAC5BnB,OAAA;EAAKoB,KAAK,EAAEd,MAAM,CAACC,UAAW;EAAAc,QAAA,EAC3BF,MAAM,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEX,KAAK,kBACvBZ,OAAA;IAAiBoB,KAAK,EAAEd,MAAM,CAACK,YAAY,CAACC,KAAK,CAAE;IAAAS,QAAA,eACjDrB,OAAA,CAACF,SAAS;MAAC0B,IAAI,EAAED,KAAK,CAACC,IAAK;MAACC,IAAI,EAAEF,KAAK,CAACE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,GADzCjB,KAAK;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CACN;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;AAACC,EAAA,GARIZ,UAAU;AAUhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}