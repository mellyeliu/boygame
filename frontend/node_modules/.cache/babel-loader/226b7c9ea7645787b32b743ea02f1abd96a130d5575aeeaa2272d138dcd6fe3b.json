{"ast":null,"code":"var _jsxFileName = \"/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js\";\nimport React from \"react\";\nimport TraitCard from \"./Trait\"; // Import the existing TraitCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\nconst TraitStack = ({\n  traits\n}) => {\n  const styles = {\n    traitStack: {\n      position: \"relative\",\n      height: \"100%\",\n      width: \"100%\" // Adjust to fit the cards\n      // height: \"350px\", // Adjust to fit the staggered stack\n    },\n    traitCard: {\n      height: \"100%\",\n      width: \"100%\" // Adjust to fit the cards\n    },\n    cardPosition: index => {\n      const offsets = [{\n        top: \"0px\",\n        left: `${getRandomNumber(30, 60)}px`,\n        rotate: `${getRandomNumber(-5, 5)}deg`\n      }, {\n        top: \"80px\",\n        left: `${getRandomNumber(-60, -30)}px`,\n        rotate: `${getRandomNumber(-5, 6)}deg`\n      }, {\n        top: \"150px\",\n        left: `${getRandomNumber(30, 60)}px`,\n        rotate: `${getRandomNumber(-6, 3)}deg`\n      }, {\n        top: \"210px\",\n        left: `${getRandomNumber(-60, -30)}px`,\n        rotate: `${getRandomNumber(-3, 6)}deg`\n      }];\n      return {\n        position: \"absolute\",\n        height: \"15%\",\n        top: offsets[index].top,\n        left: offsets[index].left,\n        transform: `rotate(${offsets[index].rotate})`\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.traitStack,\n    children: traits.map((trait, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.cardPosition(index)\n      },\n      children: /*#__PURE__*/_jsxDEV(TraitCard, {\n        text: trait.text,\n        type: trait.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = TraitStack;\nexport default TraitStack;\nvar _c;\n$RefreshReg$(_c, \"TraitStack\");","map":{"version":3,"names":["React","TraitCard","jsxDEV","_jsxDEV","getRandomNumber","min","max","Math","random","TraitStack","traits","styles","traitStack","position","height","width","traitCard","cardPosition","index","offsets","top","left","rotate","transform","style","children","map","trait","text","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mellyeliu/boygame/frontend/src/Components/TraitStack.js"],"sourcesContent":["import React from \"react\";\nimport TraitCard from \"./Trait\"; // Import the existing TraitCard component\n\nconst getRandomNumber = (min, max) => Math.random() * (max - min) + min;\n\nconst TraitStack = ({ traits }) => {\n  const styles = {\n    traitStack: {\n      position: \"relative\",\n      height: \"100%\",\n      width: \"100%\", // Adjust to fit the cards\n      // height: \"350px\", // Adjust to fit the staggered stack\n    },\n    traitCard: {\n      height: \"100%\",\n      width: \"100%\", // Adjust to fit the cards\n    },\n    cardPosition: (index) => {\n      const offsets = [\n        {\n          top: \"0px\",\n          left: `${getRandomNumber(30, 60)}px`,\n          rotate: `${getRandomNumber(-5, 5)}deg`,\n        },\n        {\n          top: \"80px\",\n          left: `${getRandomNumber(-60, -30)}px`,\n          rotate: `${getRandomNumber(-5, 6)}deg`,\n        },\n        {\n          top: \"150px\",\n          left: `${getRandomNumber(30, 60)}px`,\n          rotate: `${getRandomNumber(-6, 3)}deg`,\n        },\n        {\n          top: \"210px\",\n          left: `${getRandomNumber(-60, -30)}px`,\n          rotate: `${getRandomNumber(-3, 6)}deg`,\n        },\n      ];\n      return {\n        position: \"absolute\",\n        height: \"15%\",\n        top: offsets[index].top,\n        left: offsets[index].left,\n        transform: `rotate(${offsets[index].rotate})`,\n      };\n    },\n  };\n\n  return (\n    <div style={styles.traitStack}>\n      {traits.map((trait, index) => (\n        <div key={index} style={{ ...styles.cardPosition(index) }}>\n          <TraitCard text={trait.text} type={trait.type} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TraitStack;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAEvE,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACjC,MAAMC,MAAM,GAAG;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM,CAAE;MACf;IACF,CAAC;IACDC,SAAS,EAAE;MACTF,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM,CAAE;IACjB,CAAC;IACDE,YAAY,EAAGC,KAAK,IAAK;MACvB,MAAMC,OAAO,GAAG,CACd;QACEC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,GAAGjB,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI;QACpCkB,MAAM,EAAE,GAAGlB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACnC,CAAC,EACD;QACEgB,GAAG,EAAE,MAAM;QACXC,IAAI,EAAE,GAAGjB,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI;QACtCkB,MAAM,EAAE,GAAGlB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACnC,CAAC,EACD;QACEgB,GAAG,EAAE,OAAO;QACZC,IAAI,EAAE,GAAGjB,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI;QACpCkB,MAAM,EAAE,GAAGlB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACnC,CAAC,EACD;QACEgB,GAAG,EAAE,OAAO;QACZC,IAAI,EAAE,GAAGjB,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI;QACtCkB,MAAM,EAAE,GAAGlB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACnC,CAAC,CACF;MACD,OAAO;QACLS,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,KAAK;QACbM,GAAG,EAAED,OAAO,CAACD,KAAK,CAAC,CAACE,GAAG;QACvBC,IAAI,EAAEF,OAAO,CAACD,KAAK,CAAC,CAACG,IAAI;QACzBE,SAAS,EAAE,UAAUJ,OAAO,CAACD,KAAK,CAAC,CAACI,MAAM;MAC5C,CAAC;IACH;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqB,KAAK,EAAEb,MAAM,CAACC,UAAW;IAAAa,QAAA,EAC3Bf,MAAM,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAET,KAAK,kBACvBf,OAAA;MAAiBqB,KAAK,EAAE;QAAE,GAAGb,MAAM,CAACM,YAAY,CAACC,KAAK;MAAE,CAAE;MAAAO,QAAA,eACxDtB,OAAA,CAACF,SAAS;QAAC2B,IAAI,EAAED,KAAK,CAACC,IAAK;QAACC,IAAI,EAAEF,KAAK,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADzCf,KAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAtDIzB,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}